# This is a basic workflow to help you get started with Actions
name: DEV DISTRIBUTION

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - 'test-release/**'
      - 'dev-release/**'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # LOGGING GITHUB ALL CONTEXT FOR DEVELOP ACTION
#       - name: Check all github context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: echo "$GITHUB_CONTEXT"
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

#       # Download latest provisioning file
#       - name: Download Provisioning Profiles
#         id: provisioning
#         uses: apple-actions/download-provisioning-profiles@v1
#         with: 
#           bundle-id: 'com.example.App'
#           profile-type: 'IOS_APP_STORE'
#           issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#           api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
#           api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
  
#       - name: Another example step
#         run: echo ${{ steps.provisioning.outputs.profiles }}
      
      - name: ls
        run: ls
        
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_11.4.1.app
      
      - name: Xcode list
        run: ls -n /Applications/ | grep Xcode*
        
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
        
      - name: Pod install
        run: pod install
        
      - uses: yukiarrr/ios-build-action@v1.4.0
        with:
            project-path: bean.xcodeproj
            p12-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
            certificate-password: ${{ secrets.P12_PASSWORD }}
            mobileprovision-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
            code-signing-identity: iOS Development
            team-id: ${{ secrets.TEAM_ID }}
    
      - name: Upload ipa to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{secrets.FIREBASE_APP_ID}}
            token: ${{secrets.FIREBASE_TOKEN}}
            file: result/output.ipa
